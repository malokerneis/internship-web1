{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar useUtils_1 = require(\"../_shared/hooks/useUtils\");\n\nvar PureDateInput_1 = require(\"../_shared/PureDateInput\");\n\nvar DateTimePickerToolbar_1 = require(\"./DateTimePickerToolbar\");\n\nvar KeyboardDateInput_1 = require(\"../_shared/KeyboardDateInput\");\n\nvar usePickerState_1 = require(\"../_shared/hooks/usePickerState\");\n\nvar text_field_helper_1 = require(\"../_helpers/text-field-helper\");\n\nvar prop_types_1 = require(\"../constants/prop-types\");\n\nvar useKeyboardPickerState_1 = require(\"../_shared/hooks/useKeyboardPickerState\");\n\nvar makePickerWithState_1 = require(\"../Picker/makePickerWithState\");\n\nvar defaultProps = __assign(__assign({}, prop_types_1.dateTimePickerDefaultProps), {\n  wider: true,\n  orientation: 'portrait',\n  openTo: 'date',\n  views: ['year', 'date', 'hours', 'minutes']\n});\n\nfunction useOptions(props) {\n  var utils = useUtils_1.useUtils();\n\n  if (props.orientation !== 'portrait') {\n    throw new Error('We are not supporting custom orientation for DateTimePicker yet :(');\n  }\n\n  return {\n    getDefaultFormat: function getDefaultFormat() {\n      return text_field_helper_1.pick12hOr24hFormat(props.format, props.ampm, {\n        '12h': utils.dateTime12hFormat,\n        '24h': utils.dateTime24hFormat\n      });\n    }\n  };\n}\n\nexports.DateTimePicker = makePickerWithState_1.makePickerWithState({\n  useOptions: useOptions,\n  Input: PureDateInput_1.PureDateInput,\n  useState: usePickerState_1.usePickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar_1.DateTimePickerToolbar\n});\nexports.KeyboardDateTimePicker = makePickerWithState_1.makePickerWithState({\n  useOptions: useOptions,\n  Input: KeyboardDateInput_1.KeyboardDateInput,\n  useState: useKeyboardPickerState_1.useKeyboardPickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar_1.DateTimePickerToolbar,\n  getCustomProps: function getCustomProps(props) {\n    return {\n      refuse: props.ampm ? /[^\\dap]+/gi : /[^\\d]+/gi\n    };\n  }\n});\nexports.DateTimePicker.defaultProps = defaultProps;\nexports.KeyboardDateTimePicker.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"script"}