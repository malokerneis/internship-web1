{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar Tab_1 = __importDefault(require(\"@material-ui/core/Tab\"));\n\nvar Tabs_1 = __importDefault(require(\"@material-ui/core/Tabs\"));\n\nvar Paper_1 = __importDefault(require(\"@material-ui/core/Paper\"));\n\nvar TimeIcon_1 = require(\"../_shared/icons/TimeIcon\");\n\nvar DateRangeIcon_1 = require(\"../_shared/icons/DateRangeIcon\");\n\nvar styles_1 = require(\"@material-ui/core/styles\");\n\nvar viewToTabIndex = function viewToTabIndex(openView) {\n  if (openView === 'date' || openView === 'year') {\n    return 'date';\n  }\n\n  return 'time';\n};\n\nvar tabIndexToView = function tabIndexToView(tab) {\n  if (tab === 'date') {\n    return 'date';\n  }\n\n  return 'hours';\n};\n\nexports.useStyles = styles_1.makeStyles(function (theme) {\n  // prettier-ignore\n  var tabsBackground = theme.palette.type === 'light' ? theme.palette.primary.main : theme.palette.background[\"default\"];\n  return {\n    tabs: {\n      color: theme.palette.getContrastText(tabsBackground),\n      backgroundColor: tabsBackground\n    }\n  };\n}, {\n  name: 'MuiPickerDTTabs'\n});\n\nexports.DateTimePickerTabs = function (_a) {\n  var view = _a.view,\n      onChange = _a.onChange,\n      dateRangeIcon = _a.dateRangeIcon,\n      timeIcon = _a.timeIcon;\n  var classes = exports.useStyles();\n  var theme = styles_1.useTheme();\n  var indicatorColor = theme.palette.type === 'light' ? 'secondary' : 'primary';\n\n  var handleChange = function handleChange(e, value) {\n    if (value !== viewToTabIndex(view)) {\n      onChange(tabIndexToView(value));\n    }\n  };\n\n  return React.createElement(Paper_1[\"default\"], null, React.createElement(Tabs_1[\"default\"], {\n    variant: \"fullWidth\",\n    value: viewToTabIndex(view),\n    onChange: handleChange,\n    className: classes.tabs,\n    indicatorColor: indicatorColor\n  }, React.createElement(Tab_1[\"default\"], {\n    value: \"date\",\n    icon: React.createElement(React.Fragment, null, dateRangeIcon)\n  }), React.createElement(Tab_1[\"default\"], {\n    value: \"time\",\n    icon: React.createElement(React.Fragment, null, timeIcon)\n  })));\n};\n\nexports.DateTimePickerTabs.defaultProps = {\n  dateRangeIcon: React.createElement(DateRangeIcon_1.DateRangeIcon, null),\n  timeIcon: React.createElement(TimeIcon_1.TimeIcon, null)\n};\nexports[\"default\"] = exports.DateTimePickerTabs;","map":null,"metadata":{},"sourceType":"script"}