{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar useUtils_1 = require(\"./useUtils\");\n\nvar react_1 = require(\"react\");\n\nvar text_field_helper_1 = require(\"../../_helpers/text-field-helper\");\n\nvar usePickerState_1 = require(\"./usePickerState\");\n\nfunction parseInputString(value, utils, format) {\n  try {\n    return utils.parse(value, format);\n  } catch (_a) {\n    return null;\n  }\n}\n\nfunction useKeyboardPickerState(props, options) {\n  var _a = props.format,\n      format = _a === void 0 ? options.getDefaultFormat() : _a,\n      inputValue = props.inputValue,\n      _onChange = props.onChange,\n      value = props.value;\n  var utils = useUtils_1.useUtils();\n  var displayDate = text_field_helper_1.getDisplayDate(value, format, utils, value === null, props);\n\n  var _b = react_1.useState(displayDate),\n      innerInputValue = _b[0],\n      setInnerInputValue = _b[1];\n\n  var dateValue = inputValue ? parseInputString(inputValue, utils, format) : value;\n  react_1.useEffect(function () {\n    if (value === null || utils.isValid(value)) {\n      setInnerInputValue(displayDate);\n    }\n  }, [displayDate, setInnerInputValue, utils, value]);\n  var handleKeyboardChange = react_1.useCallback(function (date) {\n    _onChange(date, date === null ? null : utils.format(date, format));\n  }, [format, _onChange, utils]);\n\n  var _c = usePickerState_1.usePickerState(__assign(__assign({}, props), {\n    value: dateValue,\n    onChange: handleKeyboardChange\n  }), options),\n      innerInputProps = _c.inputProps,\n      wrapperProps = _c.wrapperProps,\n      pickerProps = _c.pickerProps;\n\n  var inputProps = react_1.useMemo(function () {\n    return __assign(__assign({}, innerInputProps), {\n      format: wrapperProps.format,\n      inputValue: inputValue || innerInputValue,\n      onChange: function onChange(value) {\n        setInnerInputValue(value || '');\n        var date = value === null ? null : utils.parse(value, wrapperProps.format);\n\n        _onChange(date, value);\n      }\n    });\n  }, [innerInputProps, innerInputValue, inputValue, _onChange, utils, wrapperProps.format]);\n  return {\n    inputProps: inputProps,\n    wrapperProps: wrapperProps,\n    pickerProps: pickerProps\n  };\n}\n\nexports.useKeyboardPickerState = useKeyboardPickerState;","map":null,"metadata":{},"sourceType":"script"}