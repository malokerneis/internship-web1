{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar Clock_1 = __importDefault(require(\"./Clock\"));\n\nvar ClockType_1 = __importDefault(require(\"../../constants/ClockType\"));\n\nvar useUtils_1 = require(\"../../_shared/hooks/useUtils\");\n\nvar ClockNumbers_1 = require(\"./ClockNumbers\");\n\nvar time_utils_1 = require(\"../../_helpers/time-utils\");\n\nexports.ClockView = function (_a) {\n  var type = _a.type,\n      onHourChange = _a.onHourChange,\n      onMinutesChange = _a.onMinutesChange,\n      onSecondsChange = _a.onSecondsChange,\n      ampm = _a.ampm,\n      date = _a.date,\n      minutesStep = _a.minutesStep;\n  var utils = useUtils_1.useUtils();\n  var viewProps = React.useMemo(function () {\n    switch (type) {\n      case ClockType_1[\"default\"].HOURS:\n        return {\n          value: utils.getHours(date),\n          children: ClockNumbers_1.getHourNumbers({\n            date: date,\n            utils: utils,\n            ampm: Boolean(ampm)\n          }),\n          onChange: function onChange(value, isFinish) {\n            var currentMeridiem = time_utils_1.getMeridiem(date, utils);\n            var updatedTimeWithMeridiem = time_utils_1.convertToMeridiem(utils.setHours(date, value), currentMeridiem, Boolean(ampm), utils);\n            onHourChange(updatedTimeWithMeridiem, isFinish);\n          }\n        };\n\n      case ClockType_1[\"default\"].MINUTES:\n        var minutesValue = utils.getMinutes(date);\n        return {\n          value: minutesValue,\n          children: ClockNumbers_1.getMinutesNumbers({\n            value: minutesValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setMinutes(date, value);\n            onMinutesChange(updatedTime, isFinish);\n          }\n        };\n\n      case ClockType_1[\"default\"].SECONDS:\n        var secondsValue = utils.getSeconds(date);\n        return {\n          value: secondsValue,\n          children: ClockNumbers_1.getMinutesNumbers({\n            value: secondsValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setSeconds(date, value);\n            onSecondsChange(updatedTime, isFinish);\n          }\n        };\n\n      default:\n        throw new Error('You must provide the type for TimePickerView');\n    }\n  }, [ampm, date, onHourChange, onMinutesChange, onSecondsChange, type, utils]);\n  return React.createElement(Clock_1[\"default\"], __assign({\n    type: type,\n    ampm: ampm,\n    minutesStep: minutesStep\n  }, viewProps));\n};\n\nexports.ClockView.displayName = 'TimePickerView';\nexports.ClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onHourChange: PropTypes.func.isRequired,\n  onMinutesChange: PropTypes.func.isRequired,\n  onSecondsChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(ClockType_1[\"default\"]).map(function (key) {\n    return ClockType_1[\"default\"][key];\n  })).isRequired\n};\nexports.ClockView.defaultProps = {\n  ampm: true,\n  minutesStep: 1\n};\nexports[\"default\"] = React.memo(exports.ClockView);","map":null,"metadata":{},"sourceType":"script"}